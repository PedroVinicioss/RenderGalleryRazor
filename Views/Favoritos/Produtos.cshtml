@{
    Layout = "";
    int total = 0;
}
<button class="close-favorito">
    <i class="fa-solid fa-x"></i>
</button>
<h2>Favoritos</h2>

@if (ViewBag.favoritos != null)
{


        <ul class="cd-cart-items">

   

        

        @foreach (var produto in ViewBag.favoritos)
            {
            total++;
            <li>

         <div class="row">
                    <img src="~/@produto.Art.Path" width="50" style="margin:10px;">
                    <div class="col-6">
                        <span class="cd-qty"></span> @produto.Art.Arte
                        <br>
                        <br>
                        <div class="cd-price"><a class="add-cart2" art_id="@produto.Art.Id" user_id="@produto.Art.Publicacao.User_id" href="#">Adicionar ao carrinho</a></div>
                       
                    </div>
                    <button class="cd-item-remove cd-img-replace remove-fav" product_id="@produto.Id">Remove</button>
         </div>
 
    
                </li>
            }
            </ul>
    <a href="#0" id="add-all" class="checkout-btn">Adicionar todos ao carrinho</a>
}else{

    <h2>Nenhum produto favorito!</h2>

}
  



@* <p class="cd-go-to-cart"><a href="#0">Go to cart page</a></p> *@

<script>
    $(document).ready(function () {
        $(".favorite_total").text(@total);
        $(".close-favorito").click(function () {
            OpenCloseFavoritos();

        });


        $("#add-all").click(function () {
            Swal.fire({
                title: "Tem certeza?",
                text: "Isto irá adicionar todos os seus favoritos em seu carrinho!",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                cancelButtonText: "Não",
                confirmButtonText: "Sim!"
            }).then((result) => {
                if (result.isConfirmed) {
                    var user_id = 0;
                    var formData = new FormData();
                    formData.append("user_id", user_id);
                    $.ajax({
                        dataType: "json",
                        type: "POST",
                        url: "/Favoritos/AddAll",
                        cache: false,
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (retorno) {
                            if (retorno['s']) {
                                var url = "/Cart/Produtos";
                                $.get(url, function (data) {
                                    $("#cd-cart").html(data);

                                });
                                OpenCloseCart();
                                OpenCloseFavoritos();
                            }
                            if (retorno['e']) {
                                let timerInterval;
                                Swal.fire({
                                    title: retorno['e'],
                                    html: "Irá fechar em <b></b> milisegundos.",
                                    timer: 2000,
                                    timerProgressBar: true,
                                    didOpen: () => {
                                        Swal.showLoading();
                                        const timer = Swal.getPopup().querySelector("b");
                                        timerInterval = setInterval(() => {
                                            timer.textContent = `${Swal.getTimerLeft()}`;
                                        }, 100);
                                    },
                                    willClose: () => {
                                        clearInterval(timerInterval);
                                    }
                                }).then((result) => {
                                    /* Read more about handling dismissals below */
                                    if (result.dismiss === Swal.DismissReason.timer) {
                                  
                                    }
                                });
                            }

                        }
                    });
                }
            });
        })

        $(".remove-fav").click(function () {
            Swal.fire({
                title: "Tem certeza?",
                text: "Isto irá remover o produto de seu favoritos!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                cancelButtonText: "Não",
                confirmButtonText: "Sim!"
            }).then((result) => {
                if (result.isConfirmed) {
                    var product_id = $(this).attr("product_id");
                    var formData = new FormData();
                    formData.append("product_id", product_id);
                    $.ajax({
                        dataType: "json",
                        type: "POST",
                        url: "/Favoritos/RemoveItem",
                        cache: false,
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (retorno) {
                            if (retorno) {
                                var url = "/Favoritos/Produtos";
                                $.get(url, function (data) {
                                    $("#cd-favorito").html(data);
                             
                                });
                            }

                        }
                    });
                }
            });

        })


        $(".add-cart2").click(function () {

            if (@ViewBag.user_id== $(this).attr("user_id")) {
                Swal.fire({
                    title: "Não é possivel comprar seu proprio produto!",
                    html: "Irá fechar em <b></b> milisegundos.",
                    timer: 1000,
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading();
                        const timer = Swal.getPopup().querySelector("b");
                        timerInterval = setInterval(() => {
                            timer.textContent = `${Swal.getTimerLeft()}`;
                        }, 100);
                    },
                    willClose: () => {
                        clearInterval(timerInterval);
                    }
                }).then((result) => {
                    /* Read more about handling dismissals below */
                    if (result.dismiss === Swal.DismissReason.timer) {

                    }
                });
                return
            }
            Swal.fire({
                title: "Adicionar produto?",
                text: "Deseja adicionar este produto em seu carrinho?",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Sim!",
                cancelButtonText: "Não"
            }).then((result) => {
                if (result.isConfirmed) {

                    var formData = new FormData();
                    var art_id = $(this).attr("art_id");

                    formData.append("art_id", art_id);
                    formData.append("quantidade", 1);
                    $.ajax({
                        dataType: "json",
                        type: "POST",
                        url: "/Cart/AddItem",
                        cache: false,
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (retorno) {
                            console.log(retorno);
                            if (retorno['s']) {
                                var url = "/Cart/Produtos";
                                $.get(url, function (data) {
                                    $("#cd-cart").html(data);
                                });
                                let timerInterval;
                                Swal.fire({
                                    title: "Produto adicionado!",
                                    html: "Irá fechar em <b></b> milisegundos.",
                                    timer: 1000,
                                    timerProgressBar: true,
                                    didOpen: () => {
                                        Swal.showLoading();
                                        const timer = Swal.getPopup().querySelector("b");
                                        timerInterval = setInterval(() => {
                                            timer.textContent = `${Swal.getTimerLeft()}`;
                                        }, 100);
                                    },
                                    willClose: () => {
                                        clearInterval(timerInterval);
                                    }
                                }).then((result) => {
                                    /* Read more about handling dismissals below */
                                    if (result.dismiss === Swal.DismissReason.timer) {
                                        OpenCloseCart();

                                    }
                                });
                            }

                            if (retorno['e']) {
                                let timerInterval;
                                Swal.fire({
                                    title: retorno['e'],
                                    html: "Irá fechar em <b></b> milisegundos.",
                                    timer: 2000,
                                    timerProgressBar: true,
                                    didOpen: () => {
                                        Swal.showLoading();
                                        const timer = Swal.getPopup().querySelector("b");
                                        timerInterval = setInterval(() => {
                                            timer.textContent = `${Swal.getTimerLeft()}`;
                                        }, 100);
                                    },
                                    willClose: () => {
                                        clearInterval(timerInterval);
                                    }
                                }).then((result) => {
                                    /* Read more about handling dismissals below */
                                    if (result.dismiss === Swal.DismissReason.timer) {
                                        OpenCloseCart();
                                    }
                                });
                            }

                        }
                    });
                }
            });






        });



    })

</script>