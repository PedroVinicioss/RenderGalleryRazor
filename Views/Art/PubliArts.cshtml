@{
    ViewData["Title"] = ViewBag.Title;
    Layout = "";
}
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> SignInManager;
@inject RenderGalleyRazor.Models.DatabaseContext dbContext;

@{
    var user_id = 0;
    if (SignInManager.IsSignedIn(User))
    {

        var user = dbContext.Users.Where(x => x.Email == User.Identity.Name).FirstOrDefault();
        user_id = user.Id;
    }
}

<style>
    .modal-backdrop {
        z-index: -1;
    }

    .middle3 {
        display: block;
        position: absolute;
        top: -100%;
        left: 50%;
        transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        color: white;
        font-size: 12px;
        padding: 12px;
        border: none;
        cursor: pointer;
        border-radius: 5px;
        width: 100%;
        align-items: center;
        text-align: center;
    }


    .middle4 {
        display: block;
        position: absolute;
        top: 9%;
        left: 92%;
        transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        color: white;
        font-size: 12px;
        padding: 12px;
        border: none;
        cursor: pointer;
        border-radius: 5px;
        width: 80px;
    }

    .item-btn {
        cursor: pointer;
        background-color: black;
        color: #3498DB;
        border-radius: 25px;
        border: 0;
    }

    .item-image {
        margin: 10px !important;
        height: 30px;
        width: 3px;
    }

    .item-image-like {
        height: 30px;
        width: 30px;
        margin: 0px 5px !important;
        font-size: 12px;
    }

    .item-image-profile {
        float: left;
        height: 30px;
        width: 150px;
        margin-left: 10px;
    }

    .item-image-like .icone {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    @@media (min-width: 1281px) {
        .item-image-like {
            height: 40px;
            width: 40px;
            margin: 0px 5px !important;
            font-size: 14px;
        }

        .item-image-profile {
            float: left;
            height: 40px;
            width: 180px;
            margin-left: 10px;
            font-size: 14px;
        }

        .middle4 {
            display: block;
            position: absolute;
            top: 9%;
            left: 90%;
            transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
            color: white;
            font-size: 12px;
            padding: 12px;
            border: none;
            cursor: pointer;
            border-radius: 5px;
            width: 80px;
        }
    }

    #lightgallery2 .item:hover .middle {
        display: block;
    }

    #lightgallery2 .item:hover .middle2 {
        display: block;
    }

    #lightgallery2 .item:hover .item {
        background: rgba(10, 14, 14, 0.50) !important;
    }


    .hover {
        cursor: pointer;
    }

</style>

<div class="site-section" data-aos="fade">
    <div class="container-fluid">

        <div class="row justify-content-center">

            <div class="col-md-7">
                <div class="row mb-5">
                    <div class="col-12 ">
                        <h2 class="site-section-heading text-center">@ViewBag.Title</h2>
                    </div>
                </div>
            </div>

        </div>
        <div class="row" id="lightgallery2">

          

            @foreach (var art in ViewBag.arts)
            {

                int art_id = art.Id;
                int likes = dbContext.LikeDeslikes.Where(x => x.art_id == art_id && x.isLike == true).Count();
                int deslikes = dbContext.LikeDeslikes.Where(x => x.art_id == art_id && x.isDeslike == true).Count();

                <div class="col-sm-6 col-md-4 col-lg-3 col-xl-3 item" data-src="../../@art.Path" data-aos="fade" data-sub-html="<div class='middle3'><button class='item-btn item-image-like msg2' user_id='@art.Publicacao.User.Id'><i class='far fa-comments icone'></i></button><button art_id='@art.Id' user_id='@art.Publicacao.User.Id' class='item-btn item-image-like add-favorito2'><i class='far fa-heart icone'></i></button><button art_id='@art.Id' user_id='@art.Publicacao.User.Id' class='item-btn item-image-like add-cart2'><i class='fas fa-cart-plus icone'></i></button>
                                <button class='item-btn item-image-like like2' is_like='1' style='margin-top:10px !important;' art_id='@art.Id' style='' user_id='@art.Publicacao.User.Id'>
                                    <i class='far fa-thumbs-up fa-lg'></i>
                @likes
                                </button>
                                <button class='item-btn item-image-like like2' is_like='0' style='margin-top:10px !important;' art_id='@art.Id' user_id='@art.Publicacao.User.Id'>
                                    <i class='far fa-thumbs-down fa-lg'></i>
                @deslikes
                                </button></div>">
                 
                   <img src="~/@art.Path" image_art_id="@art.Id" alt="IMage" class="img-fluid hover">
                    <div class="middle">

                        <button class="item-btn item-image-profile" style="" user_id="@art.Publicacao.User.Id">
                            <i class="far fa-user-circle fa-xl " aria-hidden="true"></i>
                            <a>@art.Publicacao.User.Name</a>
                        </button>


                        @if (SignInManager.IsSignedIn(User))
                        {

                            <button class="item-btn item-image-like msg" style="" user_id="@art.Publicacao.User.Id">
                                <i class="far fa-comments fa-lg icone"></i>

                            </button>

                        }


                        <button class="item-btn item-image-like" style="" art_id="@art.Id" user_id="@art.Publicacao.User.Id">
                            <i class="far fa-heart fa-lg icone"></i>

                        </button>


                        <button class="item-btn item-image-like add-cart" style="" art_id="@art.Id" user_id="@art.Publicacao.User.Id">
                            <i class="fas fa-cart-plus icone"></i>

                        </button>


                    </div>

                    <div class="middle2">


                        <button class="item-btn item-image-like like" is_like="1" style="margin-top:10px !important;" art_id="@art.Id" style="" user_id="@art.Publicacao.User.Id">
                            <i class="far fa-thumbs-up fa-lg"></i>
                            @likes
                        </button>
                        <button class="item-btn item-image-like like" is_like="0" style="margin-top:10px !important;" art_id="@art.Id" user_id="@art.Publicacao.User.Id">
                            <i class="far fa-thumbs-down fa-lg"></i>
                            @deslikes
                        </button>

                    </div>

                </div>


            }
        </div>
    </div>


</div>


<script type="text/javascript">

        $(document).ready(function () {
        $('#lightgallery2').lightGallery({ enableDrag: false, enableSwipe: false, hideScrollbar: true, keyPress: false, mousewheel: false });

        $("[image_art_id=@ViewBag.art_id]").click();
        var foi = 0;
       setInterval(() => {

          

           $(".lg-next").click(function(){
               foi = 0;
           })
            $(".lg-prev").click(function () {
                foi = 0;
            })

           $(".lg-thumb-item").click(function () {
               if(!$(this).hasClass("active")){
               foi = 0;
               }
           })
             if(foi ==1){
                $(".like2").click(function (e) {

                    var btn = $(this)
                    var formData = new FormData();
                    var art_id = $(this).attr("art_id");
                    var user_id = @user_id;
                    var is_like = $(this).attr("is_like");

                    if (user_id == 0) {
                        alert("deslogado!");
                        return
                    }

                    formData.append("art_id", art_id);
                    formData.append("user_id", user_id);

                    if (is_like == 1) {
                        formData.append("isLike", true);
                        formData.append("isDeslike", false);
                    } else {
                        formData.append("isLike", false);
                        formData.append("isDeslike", true);
                    }

                    $.ajax({
                        dataType: "json",
                        type: "POST",
                        url: "/Art/LikeDeslike",
                        cache: false,
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (retorno) {
                            console.log(retorno);

                            if (btn.attr("is_like") == 1) {
                                btn.siblings("button[is_like=0]").text(+retorno['deslikes']).prepend('<i class="far fa-thumbs-down fa-lg"></i> ')
                                btn.text(+retorno['likes']).prepend('<i class="far fa-thumbs-up fa-lg"></i> ')
                            } else {
                                btn.siblings("button[is_like=1]").text(+retorno['likes']).prepend('<i class="far fa-thumbs-up fa-lg"></i> ')
                                btn.text(+retorno['deslikes']).prepend('<i class="far fa-thumbs-down fa-lg"></i> ')
                            }


                        }
                    });

                })
                $(".msg2").click(function () {
                   
                    $("#msg-content").val("");

                    if (@ViewBag.user_id== $(this).attr("user_id")) {
                        Swal.fire({
                            title: "Não é possivel mandar mensagens para si mesmo!",
                            html: "Irá fechar em <b></b> milisegundos.",
                            timer: 2000,
                            timerProgressBar: true,
                            didOpen: () => {
                                Swal.showLoading();
                                const timer = Swal.getPopup().querySelector("b");
                                timerInterval = setInterval(() => {
                                    timer.textContent = `${Swal.getTimerLeft()}`;
                                }, 100);
                            },
                            willClose: () => {
                                clearInterval(timerInterval);
                            }
                        }).then((result) => {
                            /* Read more about handling dismissals below */
                            if (result.dismiss === Swal.DismissReason.timer) {

                            }
                        });
                        return
                    }

                    updateChat($(this).attr("user_id"));
                    $("#modal1").modal("show");

                })
                $(".add-cart2").click(function () {
                    if (@user_id== $(this).attr("user_id")) {
                        Swal.fire({
                            title: "Não é possivel comprar seu proprio produto!",
                            html: "Irá fechar em <b></b> milisegundos.",
                            timer: 2000,
                            timerProgressBar: true,
                            didOpen: () => {
                                Swal.showLoading();
                                const timer = Swal.getPopup().querySelector("b");
                                timerInterval = setInterval(() => {
                                    timer.textContent = `${Swal.getTimerLeft()}`;
                                }, 100);
                            },
                            willClose: () => {
                                clearInterval(timerInterval);
                            }
                        }).then((result) => {
                            /* Read more about handling dismissals below */
                            if (result.dismiss === Swal.DismissReason.timer) {

                            }
                        });
                        return
                    }
                    Swal.fire({
                        title: "Adicionar produto?",
                        text: "Deseja adicionar este produto em seu carrinho?",
                        icon: "question",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Sim!",
                        cancelButtonText: "Não"
                    }).then((result) => {
                        if (result.isConfirmed) {

                            var formData = new FormData();
                            var art_id = $(this).attr("art_id");

                            formData.append("art_id", art_id);
                            formData.append("quantidade", 1);
                            $.ajax({
                                dataType: "json",
                                type: "POST",
                                url: "/Cart/AddItem",
                                cache: false,
                                contentType: false,
                                processData: false,
                                data: formData,
                                success: function (retorno) {
                                    console.log(retorno);
                                    if (retorno['s']) {
                                        var url = "/Cart/Produtos";
                                        $.get(url, function (data) {
                                            $("#cd-cart").html(data);
                                        });
                                        let timerInterval;
                                        Swal.fire({
                                            title: "Produto adicionado!",
                                            html: "Irá fechar em <b></b> milisegundos.",
                                            timer: 2000,
                                            timerProgressBar: true,
                                            didOpen: () => {
                                                Swal.showLoading();
                                                const timer = Swal.getPopup().querySelector("b");
                                                timerInterval = setInterval(() => {
                                                    timer.textContent = `${Swal.getTimerLeft()}`;
                                                }, 100);
                                            },
                                            willClose: () => {
                                                clearInterval(timerInterval);
                                            }
                                        }).then((result) => {
                                            /* Read more about handling dismissals below */
                                            if (result.dismiss === Swal.DismissReason.timer) {
                                                OpenCloseCart();

                                            }
                                        });
                                    }

                                    if (retorno['e']) {
                                        let timerInterval;
                                        Swal.fire({
                                            title: retorno['e'],
                                            html: "Irá fechar em <b></b> milisegundos.",
                                            timer: 2000,
                                            timerProgressBar: true,
                                            didOpen: () => {
                                                Swal.showLoading();
                                                const timer = Swal.getPopup().querySelector("b");
                                                timerInterval = setInterval(() => {
                                                    timer.textContent = `${Swal.getTimerLeft()}`;
                                                }, 100);
                                            },
                                            willClose: () => {
                                                clearInterval(timerInterval);
                                            }
                                        }).then((result) => {
                                            /* Read more about handling dismissals below */
                                            if (result.dismiss === Swal.DismissReason.timer) {

                                            }
                                        });
                                    }

                                }
                            });
                        }
                    });






                });



                $(".add-favorito2").click(function () {
                    if (@user_id== $(this).attr("user_id")) {
                        Swal.fire({
                            title: "Não é possivel adicionar seu proprio produto como favorito!",
                            html: "Irá fechar em <b></b> milisegundos.",
                            timer: 2000,
                            timerProgressBar: true,
                            didOpen: () => {
                                Swal.showLoading();
                                const timer = Swal.getPopup().querySelector("b");
                                timerInterval = setInterval(() => {
                                    timer.textContent = `${Swal.getTimerLeft()}`;
                                }, 100);
                            },
                            willClose: () => {
                                clearInterval(timerInterval);
                            }
                        }).then((result) => {
                            /* Read more about handling dismissals below */
                            if (result.dismiss === Swal.DismissReason.timer) {

                            }
                        });
                        return
                    }
                    Swal.fire({
                        title: "Adicionar produto?",
                        text: "Deseja adicionar este produto em seus favoritos?",
                        icon: "question",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Sim!",
                        cancelButtonText: "Não"
                    }).then((result) => {
                        if (result.isConfirmed) {

                            var formData = new FormData();
                            var art_id = $(this).attr("art_id");

                            formData.append("art_id", art_id);
                            formData.append("quantidade", 1);
                            $.ajax({
                                dataType: "json",
                                type: "POST",
                                url: "/Favoritos/AddItem",
                                cache: false,
                                contentType: false,
                                processData: false,
                                data: formData,
                                success: function (retorno) {
                                    console.log(retorno);
                                    if (retorno['s']) {
                                        var url = "/Favoritos/Produtos";
                                        $.get(url, function (data) {
                                            $("#cd-favorito").html(data);
                                        });
                                        let timerInterval;
                                        Swal.fire({
                                            title: "Produto adicionado!",
                                            html: "Irá fechar em <b></b> milisegundos.",
                                            timer: 2000,
                                            timerProgressBar: true,
                                            didOpen: () => {
                                                Swal.showLoading();
                                                const timer = Swal.getPopup().querySelector("b");
                                                timerInterval = setInterval(() => {
                                                    timer.textContent = `${Swal.getTimerLeft()}`;
                                                }, 100);
                                            },
                                            willClose: () => {
                                                clearInterval(timerInterval);
                                            }
                                        }).then((result) => {
                                            /* Read more about handling dismissals below */
                                            if (result.dismiss === Swal.DismissReason.timer) {
                                                OpenCloseFavoritos();

                                            }
                                        });
                                    }

                                    if (retorno['e']) {
                                        let timerInterval;
                                        Swal.fire({
                                            title: retorno['e'],
                                            html: "Irá fechar em <b></b> milisegundos.",
                                            timer: 2000,
                                            timerProgressBar: true,
                                            didOpen: () => {
                                                Swal.showLoading();
                                                const timer = Swal.getPopup().querySelector("b");
                                                timerInterval = setInterval(() => {
                                                    timer.textContent = `${Swal.getTimerLeft()}`;
                                                }, 100);
                                            },
                                            willClose: () => {
                                                clearInterval(timerInterval);
                                            }
                                        }).then((result) => {
                                            /* Read more about handling dismissals below */
                                            if (result.dismiss === Swal.DismissReason.timer) {
                                                OpenCloseFavoritos();
                                            }
                                        });
                                    }


                                }
                            });
                        }
                    });

                });
             }   
           foi++;
        }, "1000");
 
        });




 



   

</script>
