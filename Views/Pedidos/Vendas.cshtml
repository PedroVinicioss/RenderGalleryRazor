@{
	ViewData["Title"] = ViewBag.Title;
}
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> SignInManager;
@inject RenderGalleyRazor.Models.DatabaseContext dbContext;

@{
	var user_id = 0;
	if (SignInManager.IsSignedIn(User))
	{

		var user = dbContext.Users.Where(x => x.Email == User.Identity.Name).FirstOrDefault();
		user_id = user.Id;
	}
}
<style>
	.btn-order {
		color:white !important;
	}

	.card-box {
		position: relative;
		color: #fff;
		padding: 20px 10px 40px;
		margin: 20px 0px;
		border-radius: 10px;
	}

		.card-box:hover {
			text-decoration: none;
			color: #f1f1f1;
		}

			.card-box:hover .icon i {
				font-size: 100px;
				transition: 1s;
				-webkit-transition: 1s;
			}

		.card-box .inner {
			padding: 5px 10px 0 10px;
		}

		.card-box h3 {
			font-size: 27px;
			font-weight: bold;
			margin: 0 0 8px 0;
			white-space: nowrap;
			padding: 0;
			text-align: left;
		}

		.card-box p {
			font-size: 15px;
		}

		.card-box .icon {
			position: absolute;
			top: auto;
			bottom: 5px;
			right: 5px;
			z-index: 0;
			font-size: 72px;
			color: rgba(0, 0, 0, 0.15);
		}

		.card-box .card-box-footer {
			position: absolute;
			left: 0px;
			bottom: 0px;
			text-align: center;
			padding: 3px 0;
			color: rgba(255, 255, 255, 0.8);
			background: rgba(0, 0, 0, 0.1);
			width: 100%;
			text-decoration: none;
		}

		.card-box:hover .card-box-footer {
			background: rgba(0, 0, 0, 0.3);
		}

	.bg-blue {
		background-color: #00c0ef !important;
	}

	.bg-green {
		background-color: #00a65a !important;
	}

	.bg-orange {
		background-color: #f39c12 !important;
	}

	.bg-red {
		background-color: #d9534f !important;
	}

	.msg{
		cursor:pointer;
		color: #3498DB;
	}
</style>

<div class="site-section" data-aos="fade">
	<div class="container">
		<div class="row">
			<div class="col-lg-4 col-sm-6">
				<div class="card-box bg-green">
					<div class="inner">
						<h3>@ViewBag.saldo  </h3>
						<p>Saldo da Carteira </p>
					</div>
					<div class="icon">
						<i class="fa-solid fa-dollar-sign"></i>
					</div>
					<a href="#" class="card-box-footer">Retirar dinheiro <i class="fa fa-arrow-circle-right"></i></a>
				</div>
			</div>
			<div class="col-lg-4 col-sm-6">
				<div class="card-box bg-orange">
					<div class="inner">
						<h3> @ViewBag.Sell </h3>
						<p> Vendas totais </p>
					</div>
					<div class="icon">
						<i class="fa-solid fa-chart-simple"></i>
					</div>
					
				</div>
			</div>
			<div class="col-lg-4 col-sm-6">
				<div class="card-box bg-blue">
					<div class="inner">
						<h3> @ViewBag.Total </h3>
						<p> Valor total vendido </p>
					</div>
					<div class="icon">
						<i class="fa-solid fa-money-bill"></i>
					</div>
		
				</div>
			</div>
		</div>
	<br />
		<div class="row justify-content-center">
			<div class="col-md-6 text-center mb-5">
				<h2 class="heading-section">Minhas Vendas</h2>
			</div>
		</div>
		<div class="row">
			<div class="col-md-12">
				<div class="table-wrap">
					<table class="table table-striped">
						<thead>
							<tr>
								<th>Arte</th>
								<th>Pedido</th>
								<th>Cliente</th>
								<th>Valor</th>
								<th>Status</th>
								<th>Ação</th>
							</tr>
						</thead>
						<tbody>
							@if(ViewBag.produtos != null)
							{
								foreach (var produto in ViewBag.produtos)
								{
									<tr>
										<td scope="row"><img src="~/@produto.Arte.Path" width="50"> @produto.Arte.Arte</td>
										<td>@produto.Pedido.Id</td>
										<td>@produto.User.Name</td>
										<td>@produto.Valor</td>
										<td>
											
											@if(produto.Pedido.Status == 0)
											{
												<a disabled class="btn btn-danger btn-order "> Não Liberado</a>
											}
											else
											{
												<a  class="btn btn-success btn-order"> Liberado</a>
											}

									</td>
										<td><i class="far fa-comments fa-lg msg" user_id="@produto.User.Id"></i></td>
									</tr>

								}
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>
<script>

	window.onload = function () {
		$(".msg").click(function () {
			$("#msg-content").val("");

			if (@user_id== $(this).attr("user_id")) {
				Swal.fire({
					title: "Não é possivel mandar mensagens para si mesmo!",
					html: "Irá fechar em <b></b> milisegundos.",
					timer: 1000,
					timerProgressBar: true,
					didOpen: () => {
						Swal.showLoading();
						const timer = Swal.getPopup().querySelector("b");
						timerInterval = setInterval(() => {
							timer.textContent = `${Swal.getTimerLeft()}`;
						}, 100);
					},
					willClose: () => {
						clearInterval(timerInterval);
					}
				}).then((result) => {
					/* Read more about handling dismissals below */
					if (result.dismiss === Swal.DismissReason.timer) {

					}
				});
				return
			} else if (!@user_id) {
				window.location.href = '/Account/Register';
				return;
			}

			updateChat($(this).attr("user_id"));
			$("#modal1").modal("show");

		})
	}
</script>
